!obj:pylearn2.train.Train {
    dataset: &train !obj:contest_dataset.ContestDataset {
        which_set: 'train',
        start: 10,
        stop: 4010,
        preprocessor: !obj:pylearn2.datasets.preprocessing.GlobalContrastNormalization {}
    },
    model: !obj:pylearn2.models.mlp.MLP {
        layers: [
                 !obj:pylearn2.models.mlp.SoftmaxPool {
                     layer_name: 'h0',
                     detector_layer_dim: 5000,
                     pool_size: 5,
                     sparse_init: 20,
                     sparse_stdev: .005
                 },
                 !obj:pylearn2.models.mlp.SoftmaxPool {
                     layer_name: 'h1',
                     detector_layer_dim: 4000,
                     pool_size: 5,
                     sparse_init: 20,
                     sparse_stdev: .005
                 },
                 !obj:pylearn2.models.mlp.Softmax {
                     layer_name: 'y',
                     n_classes: 7,
                     irange: .005
                 }
            ],
        nvis: 2304,
    },
    algorithm: !obj:pylearn2.training_algorithms.sgd.SGD {
        batch_size: 1,
        learning_rate: .08,
        monitoring_dataset:
        {
            'train' : *train,
        },
        cost: !obj:pylearn2.costs.cost.MethodCost {
                method: 'cost_from_X',
                supervised: 1
        },
    },
    save_path: "${PYLEARN2_TRAIN_FILE_FULL_STEM}.pkl",
    save_freq: 1
}
